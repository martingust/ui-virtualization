"bundle";!function(){var a=System.get("@@amd-helpers").createDefine();define("app.html!github:systemjs/plugin-text@0.0.3.js",[],function(){return'<template> <require from="nav-bar.html"></require> <require from="bootstrap/css/bootstrap.css"></require> <nav-bar router.bind="router"></nav-bar> <div class="page-host"> <div class="contact-list" if.bind="viewStrategy === \'div\'"> <div if.bind="isVisible"> <div virtual-repeat.for="item of objectArray" class="contact-list-item ${item.name}"> <div class="contact-item"> <div class="avatar" click.delegate="click()" css="background-color: ${item.color}">${item.firstLetter}</div> <div class="name"> ${item.name} </div> <div class="content"> <strong>Phone:</strong> ${item.phone} <br> <strong>Country:</strong> ${item.country} <br> </div> </div> </div> </div> </div> <div class="contact-list" if.bind="viewStrategy === \'table\'"> <table if.bind="isVisible"> <tr virtual-repeat.for="item of objectArray" class="contact-list-item ${item.name}"> <td width="85"> <div class="avatar" click.delegate="click()" css="background-color: ${item.color}">${item.firstLetter}</div> </td> <td> <div class="contact-item"> <div class="name"> ${item.name} </div> <div class="content"> <strong>Phone:</strong> ${item.phone} <br> <strong>Country:</strong> ${item.country} <br> </div> </div> </td> </tr> </table> </div> <div class="contact-list" if.bind="viewStrategy === \'ul\'"> <ul if.bind="isVisible"> <li virtual-repeat.for="item of objectArray" class="contact-list-item ${item.name}"> <div class="contact-item"> <div class="avatar" click.delegate="click()" css="background-color: ${item.color}">${item.firstLetter}</div> <div class="name"> ${item.name} </div> <div class="content"> <strong>Phone:</strong> ${item.phone} <br> <strong>Country:</strong> ${item.country} <br> </div> </div> </li> </ul> </div> <div class="array-actions"> <button class="btn btn-primary" click.delegate="addItems(1000)">Add 1000</button> <button class="btn btn-primary" click.delegate="addItems(10000)">Add 10 000</button> <button class="btn btn-primary" click.delegate="addItemFirst()">Add 1 at top</button> <button class="btn btn-primary" click.delegate="addItemLast()">Add 1 at bottom</button> <button class="btn btn-primary" click.delegate="removeItems(1)">Remove 1 at top</button> <button class="btn btn-primary" click.delegate="removeLast()">Remove 1 at bottom</button> <button class="btn btn-primary" click.delegate="toggle()">Toggle visibility</button> <button class="btn btn-primary" click.delegate="swap()">Swap</button> <br><br> <button class="btn ${viewStrategy === \'div\' ? \'btn-danger\' : \'\'}" click.trigger="setViewStrategy(\'div\')">Div</button> <button class="btn ${viewStrategy === \'table\' ? \'btn-danger\' : \'\'}" click.trigger="setViewStrategy(\'table\')">Table</button> <button class="btn ${viewStrategy === \'ul\' ? \'btn-danger\' : \'\'}" click.trigger="setViewStrategy(\'ul\')">UL</button> </div> </div> </template>'}),a()}(),System.register("app.js",[],function(a){"use strict";function b(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var c,d=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();return{setters:[],execute:function(){c=function(){function a(){b(this,a),this.objectArray=[],this.objectArray2=[],this.numberOfItems=100,this.isSelected=!1,this.isVisible=!0,this.viewStrategy="div"}return d(a,[{key:"setViewStrategy",value:function(a){this.viewStrategy=a}},{key:"toggle",value:function(){this.isVisible=!this.isVisible}},{key:"click",value:function(){console.log("click")}},{key:"setIsSelected",value:function(){this.isSelected=!0}},{key:"createItem",value:function(a){var b=faker.name.findName();return{firstLetter:b.charAt(0),name:a+" "+b,color:faker.internet.color(),phone:faker.phone.phoneNumber(),country:faker.address.country()}}},{key:"activate",value:function(){for(var a,b=0;b<this.numberOfItems;++b)a=faker.name.findName(),this.objectArray.push(this.createItem(b));for(var b=0;b<this.numberOfItems;++b)a=faker.name.findName(),this.objectArray2.push(this.createItem())}},{key:"swap",value:function(){this.objectArray=this.objectArray2}},{key:"addItems",value:function(a){for(var b=0;a>b;++b)this.objectArray.push(this.createItem(b)),console.log(b);this.numberOfItems=this.objectArray.length}},{key:"addItem2",value:function(){var a=this.createItem();this.objectArray.splice(1,0,a)}},{key:"addItemFirst",value:function(){this.objectArray.unshift(this.createItem())}},{key:"removeItems",value:function(a){this.objectArray.splice(0,a)}},{key:"unshift5",value:function(){this.objectArray.unshift(this.createItem(),this.createItem(),this.createItem(),this.createItem(),this.createItem())}},{key:"addItemLast",value:function(){this.objectArray.push(this.createItem())}},{key:"removeLast",value:function(){this.objectArray.pop()}}]),a}(),a("App",c)}}}),System.register("main.js",["bootstrap"],function(a){"use strict";function b(a){a.use.standardConfiguration().developmentLogging(),a.use.plugin("martingust/ui-virtualization"),a.start().then(function(a){return a.setRoot()})}return a("configure",b),{setters:[function(a){}],execute:function(){}}}),function(){var a=System.get("@@amd-helpers").createDefine();define("nav-bar.html!github:systemjs/plugin-text@0.0.3.js",[],function(){return'<template bindable="router"> <nav class="navbar navbar-default navbar-fixed-top" role="navigation"> <div class="navbar-header"> <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#skeleton-navigation-navbar-collapse"> <span class="sr-only">Toggle Navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> <a class="navbar-brand" href="#"> <i class="fa fa-home"></i> <span>${router.title}</span> </a> </div> <div class="collapse navbar-collapse" id="skeleton-navigation-navbar-collapse"> <ul class="nav navbar-nav"> <li repeat.for="row of router.navigation" class="${row.isActive ? \'active\' : \'\'}"> <a data-toggle="collapse" data-target="#skeleton-navigation-navbar-collapse.in" href.bind="row.href">${row.title}</a> </li> </ul> <ul class="nav navbar-nav navbar-right"> <li class="loader" if.bind="router.isNavigating"> <i class="fa fa-spinner fa-spin fa-2x"></i> </li> </ul> </div> </nav> </template>'}),a()}();